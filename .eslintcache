[{"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\index.tsx":"1","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\app\\App.tsx":"2","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\app\\App.styles.js":"3","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\utils\\index.ts":"4","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\types\\types.ts":"5","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\numberDisplay\\NumberDisplay.tsx":"6","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\numberDisplay\\NumberDisplay.styles.js":"7","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\cellButton\\cellButton.tsx":"8","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\cellButton\\cellButton.styles.js":"9"},{"size":236,"mtime":1609078683513,"results":"10","hashOfConfig":"11"},{"size":972,"mtime":1609173481588,"results":"12","hashOfConfig":"11"},{"size":1318,"mtime":1609170910730,"results":"13","hashOfConfig":"11"},{"size":381,"mtime":1609172739700,"results":"14","hashOfConfig":"11"},{"size":243,"mtime":1609172561882,"results":"15","hashOfConfig":"11"},{"size":380,"mtime":1609169751429,"results":"16","hashOfConfig":"11"},{"size":262,"mtime":1609170883323,"results":"17","hashOfConfig":"11"},{"size":199,"mtime":1609173502301,"results":"18","hashOfConfig":"11"},{"size":296,"mtime":1609173545327,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"17us26t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\index.tsx",[],["41","42"],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\app\\App.tsx",["43"],"import React, { useState } from \"react\";\r\n\r\nimport { generateCells } from \"../../utils/index\";\r\nimport NumberDisplay from \"../numberDisplay/NumberDisplay\";\r\nimport CellButton from \"../cellButton/cellButton\";\r\nimport { AppContainer, AppHeader, AppBody, SmileContainer } from \"./App.styles\";\r\n\r\nconst App: React.FC = () => {\r\n  const [cells, setSells] = useState(generateCells());\r\n\r\n  const renderCells = (): React.ReactNode => {\r\n    return cells.map((row, rowIndex) =>\r\n      row.map((cell, cellIndex) => (\r\n        <CellButton key={`${rowIndex}-${cellIndex}`} />\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <AppHeader>\r\n        <NumberDisplay value={0} />\r\n        <SmileContainer>\r\n          <span role=\"img\" aria-label=\"smile\">\r\n            ðŸ˜€\r\n          </span>\r\n        </SmileContainer>\r\n        <NumberDisplay value={23} />\r\n      </AppHeader>\r\n      <AppBody>{renderCells()}</AppBody>\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\app\\App.styles.js",[],["44","45"],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\utils\\index.ts",[],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\types\\types.ts",[],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\numberDisplay\\NumberDisplay.tsx",[],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\numberDisplay\\NumberDisplay.styles.js",[],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\cellButton\\cellButton.tsx",[],"D:\\Web\\Web\\Projects\\typescript-minesweeper\\src\\components\\cellButton\\cellButton.styles.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":17,"nodeType":"52","messageId":"53","endLine":9,"endColumn":25},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'setSells' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]